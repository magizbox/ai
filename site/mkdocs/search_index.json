{
    "docs": [
        {
            "location": "/", 
            "text": "Artificial Intelligence\n\n\n\n\nArtificial intelligence (AI) is the intelligence exhibited by machines or software. It is also the name of the academic field of study which studies how to create computers and computer software that are capable of intelligent behavior. Major AI researchers and textbooks define this field as \"the study and design of intelligent agents\", in which an intelligent agent is a system that perceives its environment and takes actions that maximize its chances of success. John McCarthy, who coined the term in 1955, defines it as \"the science and engineering of making intelligent machines\".", 
            "title": "Home"
        }, 
        {
            "location": "/#artificial-intelligence", 
            "text": "Artificial intelligence (AI) is the intelligence exhibited by machines or software. It is also the name of the academic field of study which studies how to create computers and computer software that are capable of intelligent behavior. Major AI researchers and textbooks define this field as \"the study and design of intelligent agents\", in which an intelligent agent is a system that perceives its environment and takes actions that maximize its chances of success. John McCarthy, who coined the term in 1955, defines it as \"the science and engineering of making intelligent machines\".", 
            "title": "Artificial Intelligence"
        }, 
        {
            "location": "/autonomous_agents/", 
            "text": "Autonomous Agents\n\n\nAutonomous Agents\n\n\n\n\nlimited ability to perceive its environment\n\n\nprocess the environment and calculate an action\n\n\nno global plan / leader\n\n\n\n\nVehicles\n\n\n\n\nAction / Selection\n\n\nSteering\n\n\nLocomotion\n\n\n\n\nSteering Behavior \n1\n \n2\n\n\n\n\nSteering = Desired - Velocity\n\n\nSeek\n\n\nFlow Filed Following\n\n\nPath Following\n\n\nGroup Steering\n\n\nhttps://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/chp06_agents\\\n\n\n\n\n\n\n\n\n\n\nMassive Battle: Coordinated Movement of Autonomous Agents\n\n\n\n\n\n\nCraig Reynolds, \nSteering Behaviors For Autonomous Characters", 
            "title": "Autonomous Agents"
        }, 
        {
            "location": "/autonomous_agents/#autonomous-agents", 
            "text": "Autonomous Agents   limited ability to perceive its environment  process the environment and calculate an action  no global plan / leader   Vehicles   Action / Selection  Steering  Locomotion", 
            "title": "Autonomous Agents"
        }, 
        {
            "location": "/autonomous_agents/#steering-behavior-1-2", 
            "text": "Steering = Desired - Velocity", 
            "title": "Steering Behavior 1 2"
        }, 
        {
            "location": "/autonomous_agents/#seek", 
            "text": "", 
            "title": "Seek"
        }, 
        {
            "location": "/autonomous_agents/#flow-filed-following", 
            "text": "", 
            "title": "Flow Filed Following"
        }, 
        {
            "location": "/autonomous_agents/#path-following", 
            "text": "", 
            "title": "Path Following"
        }, 
        {
            "location": "/autonomous_agents/#group-steering", 
            "text": "https://github.com/shiffman/The-Nature-of-Code-Examples/tree/master/chp06_agents\\      Massive Battle: Coordinated Movement of Autonomous Agents    Craig Reynolds,  Steering Behaviors For Autonomous Characters", 
            "title": "Group Steering"
        }, 
        {
            "location": "/cellular_automator/", 
            "text": "Cellular Automator\n\n\nhttps://www.youtube.com/watch?v=DKGodqDs9sA\nindex=1\nlist=PLRqwX-V7Uu6YrWXvEQFOGbCt6cX83Xunm\n\n\nCellular Automata\n\n\n\n\nGrid of cell\n\n\nEach cell has state, neighborhood\n\n\ncell state at time t defined by a function of neighborhood states at time t-1\n\n\n\n\nElementary Cellular Automata", 
            "title": "Cellular Automator"
        }, 
        {
            "location": "/cellular_automator/#cellular-automator", 
            "text": "https://www.youtube.com/watch?v=DKGodqDs9sA index=1 list=PLRqwX-V7Uu6YrWXvEQFOGbCt6cX83Xunm  Cellular Automata   Grid of cell  Each cell has state, neighborhood  cell state at time t defined by a function of neighborhood states at time t-1   Elementary Cellular Automata", 
            "title": "Cellular Automator"
        }, 
        {
            "location": "/fractal/", 
            "text": "Fractal\n\n\n\n\nL-System", 
            "title": "Fractal"
        }, 
        {
            "location": "/pacman/", 
            "text": "The Pac-Man Projects\n\n\nToday I found an interesting AI project - \nThe Pac-Man\n\n\n\n\nHere is the project overview\n\n\nThe Pac-Man projects\n were developed for UC Berkeley's introductory artificial intelligence course, CS 188. They apply an array of AI techniques to playing Pac-Man. However, these projects don't focus on building AI for video games. Instead, they teach foundational AI concepts, such as \ninformed state-space search\n, \nprobabilistic inference\n, and \nreinforcement learning\n. These concepts underly real-world application areas such as natural language processing, computer vision, and robotics.\n\nWe designed these projects with three goals in mind. The projects allow students to\n visualize the results of the techniques\n they implement. They also contain code examples and clear directions, but do not force students to wade through undue amounts of scaffolding. Finally, Pac-Man provides a challenging problem environment that demands creative solutions; real-world AI problems are challenging, and Pac-Man is too.\n\nIn our course, these projects have boosted enrollment, teaching reviews, and student engagement. The projects have been field-tested, refined, and debugged over multiple semesters at Berkeley. We are now happy to release them to other universities for educational use.\n\n\n\nIn the next part of this post, I will show my works on this project\n\n\nProject 1: Search in Pacman\n\n\n[caption id=\"\" align=\"alignleft\" width=\"231\"]\n DFS[/caption]\n\n\n[caption id=\"\" align=\"alignleft\" width=\"233\"]\n BFS[/caption]", 
            "title": "The Pac-Man Projects"
        }, 
        {
            "location": "/pacman/#the-pac-man-projects", 
            "text": "Today I found an interesting AI project -  The Pac-Man   Here is the project overview  The Pac-Man projects  were developed for UC Berkeley's introductory artificial intelligence course, CS 188. They apply an array of AI techniques to playing Pac-Man. However, these projects don't focus on building AI for video games. Instead, they teach foundational AI concepts, such as  informed state-space search ,  probabilistic inference , and  reinforcement learning . These concepts underly real-world application areas such as natural language processing, computer vision, and robotics.\n\nWe designed these projects with three goals in mind. The projects allow students to  visualize the results of the techniques  they implement. They also contain code examples and clear directions, but do not force students to wade through undue amounts of scaffolding. Finally, Pac-Man provides a challenging problem environment that demands creative solutions; real-world AI problems are challenging, and Pac-Man is too.\n\nIn our course, these projects have boosted enrollment, teaching reviews, and student engagement. The projects have been field-tested, refined, and debugged over multiple semesters at Berkeley. We are now happy to release them to other universities for educational use.  In the next part of this post, I will show my works on this project  Project 1: Search in Pacman  [caption id=\"\" align=\"alignleft\" width=\"231\"]  DFS[/caption]  [caption id=\"\" align=\"alignleft\" width=\"233\"]  BFS[/caption]", 
            "title": "The Pac-Man Projects"
        }
    ]
}